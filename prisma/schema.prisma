// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum ROLE {
  USER
  AGENT
  ADMIN
}

enum STATUS {
  ACTIVE
  INACTIVE
  BLOCKED
}

enum EMAIL_VERIFY {
  VERIFY
  UNVERIFY
}

enum PHONE_VERIFY {
  VERIFY
  UNVERIFY
}

model User {
  id                    String         @id @default(uuid())
  name                  String         @db.VarChar(255)
  email                 String         @db.Char(50)
  phone                 String         @unique @db.Char(10)
  password              String         @unique @db.Char(255)
  address               String         @default("")
  avatar                String         @default("")
  email_verify_token    String         @db.Text
  forgot_password_token String?        @db.Text
  created_at            DateTime       @default(now())
  updated_at            DateTime       @default(now())
  date_of_birth         DateTime       @default(now())
  email_verify          EMAIL_VERIFY   @default(UNVERIFY)
  phone_verify          PHONE_VERIFY   @default(UNVERIFY)
  role                  ROLE           @default(USER)
  status                STATUS         @default(ACTIVE)
  RefreshTokens         RefreshToken[]
}

model RefreshToken {
  id         String   @id @default(uuid())
  token      String   @db.Text
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
  User       User     @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_User_idx")
  userId     String

  @@index([userId], map: "FK_User_idx")
}

// model SocialList {
//   id       String @id @default(uuid())
//   provider String
//   link     String
//   icon     String
//   User     User   @relation(fields: [userId], references: [id])
//   userId   String
// }

// model Submission {
//   id      String @id @default(uuid())
//   message String
//   // property_id
//   User    User   @relation(fields: [userId], references: [id])
//   userId  String
// }

// model Property {
//   id             String   @id @default(uuid())
//   name           String
//   description    String
//   listing_type   Int
//   price          Float
//   status         Int
//   images         Int
//   bedroom_count  Int
//   bathroom_count Int
//   year_built     DateTime @default(now())
//   size           Float
//   feature_image  String
//   stars          Float
//   // property_type_id
//   // agent_id
//   User           User     @relation(fields: [userId], references: [id])
//   userId         String
// }

// model PropertyType {
//   id          String @id @default(uuid())
//   name        String
//   description String
//   image       String
// }

// model PropertyFeature {
//   id String @id @default(uuid())
//   // property_id
//   // feature_id
// }

// model Feature {
//   id   String @id @default(uuid())
//   name String
//   imag String
// }

// model comment {
//   id     String   @id @default(uuid())
//   text   String
//   parent Int
//   date   DateTime @default(now())
//   // user_id
//   // property_id
// }
